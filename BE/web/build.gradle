plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// swagger를 위한 springdoc dependency 추가
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	annotationProcessor("com.google.guava:guava:29.0-jre")

	// redis
//	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// com.sun.xml.bind : jwt
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
	implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
	// javax.xml.bind : jwt
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

	// jwt 설정
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'


	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//WebSocket 설정
	//STOMP 관련 프론트 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.springframework:spring-messaging:6.0.3'
	implementation 'org.springframework.security:spring-security-messaging:6.0.2'

	// mongoDB 설정
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//이메일 인증 API 설정
	implementation 'com.sun.mail:smtp:2.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// JSON 파싱
	implementation 'com.google.code.gson:gson:2.8.7'

	// OAuth2.0
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Openvidu 의존성
	implementation 'io.openvidu:openvidu-java-client:2.25.0'
}

test {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory.set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}